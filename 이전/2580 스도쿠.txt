import sys

pan, zeroPan = [], []
xy = [(0,0), (3,0), (6,0), (0,3), (3,3), (6,3), (0,6), (3,6), (6,6)]

for i in range(9):
    tempRow = list(map(int, sys.stdin.readline().split()))
    pan.append(tempRow)

for i in range(9):
    for j in range(9):
        if pan[i][j] == 0:
            zeroPan.append((i,j))

def samsam(n, i):
    for x in range(xy[n][0], xy[n][0]+3):
        for y in range(xy[n][1], xy[n][1]+3):
            if pan[x][y] == i:
                return False
    return True

def chkRow(n):
    if n==len(zeroPan):
        for row in pan:
            print(*row)
        sys.exit(0)

    ableNum = True
    samXy = -1

    for i in range(1,10):
        if i not in pan[zeroPan[n][0]]: #행검사
            for j in range(9):
                if pan[j][zeroPan[n][1]] == i:
                    ableNum=False
                    break               #열검사
            if not ableNum :
                ableNum = True
                continue
            else:
                for j in range(9):
                    if -1 <zeroPan[n][0] - xy[j][0] < 3 and -1 <zeroPan[n][1] - xy[j][1] < 3:
                        samXy = j
                        break
                if samsam(samXy, i):
                    pan[zeroPan[n][0]][zeroPan[n][1]] = i
                    chkRow(n+1)
                    pan[zeroPan[n][0]][zeroPan[n][1]] = 0


chkRow(0)
################## 여기까지 내가한거 #########################################

a = [list(map(int, input().split())) for _ in range(9)]
b, n = [0]*81, 0
row = [[False]*10 for _ in range(9)]
col = [[False]*10 for _ in range(9)]
squ = [[False]*10 for _ in range(9)]

def s(i, j):
    return i//3*3 + j//3    #작은사각형 좌표 표시

def solve(idx):
    if idx == n:
        for i in range(9):
            print(' '.join(map(str, a[i])))
        exit(0)


    x, y = b[idx]//9, b[idx]%9  #압축 내용을 좌표로 변환

    for i in range(1, 10):
        if not (row[x][i] or col[y][i] or squ[s(x,y)][i]):     #해당 행, 열, 작은사각형에는 k값이 들어가있지 않으면
            row[x][i] = col[y][i] = squ[s(x,y)][i] = True
            a[x][y] = i
            solve(idx+1)
            a[x][y] = 0
            row[x][i] = col[y][i] = squ[s(x,y)][i] = False


for i in range(9):
    for j in range(9):
        k = a[i][j]
        if k:
            row[i][k] = True
            col[j][k] = True
            squ[s(i,j)][k] = True   #해당 행, 열, 작은사각형에는 k값이 들어가있다를 표시
        else:
            b[n] = i*9 + j
            n += 1                  #안되는 좌표 세팅
solve(0)